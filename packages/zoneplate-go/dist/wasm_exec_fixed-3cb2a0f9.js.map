{"version":3,"file":"wasm_exec_fixed-3cb2a0f9.js","sources":["../lib/wasm-go/wasm_exec_fixed.js"],"sourcesContent":["// Copyright 2018 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n(() => {\n  // Map multiple JavaScript environments to a single common API,\n  // preferring web standards over Node.js API.\n  //\n  // Environments considered:\n  // - Browsers\n  // - Node.js\n  // - Electron\n  // - Parcel\n\n  if (typeof global !== 'undefined') {\n    // global already exists\n  } else if (typeof window !== 'undefined') {\n    window.global = window\n  } else if (typeof self !== 'undefined') {\n    self.global = self\n  } else {\n    throw new Error('cannot export Go (neither global, window nor self is defined)')\n  }\n\n  // This is the culprit!\n  // if (!global.require && typeof require !== 'undefined') {\n  //   global.require = require\n  // }\n\n  // if (!global.fs && global.require) {\n  //   const fs = require('fs')\n  //   if (Object.keys(fs) !== 0) {\n  //     global.fs = fs\n  //   }\n  // }\n\n  const enosys = () => {\n    const err = new Error('not implemented')\n    err.code = 'ENOSYS'\n    return err\n  }\n\n  if (!global.fs) {\n    let outputBuf = ''\n    global.fs = {\n      constants: { O_WRONLY: -1, O_RDWR: -1, O_CREAT: -1, O_TRUNC: -1, O_APPEND: -1, O_EXCL: -1 }, // unused\n      writeSync (fd, buf) {\n        outputBuf += decoder.decode(buf)\n        const nl = outputBuf.lastIndexOf('\\n')\n        if (nl != -1) {\n          console.log(outputBuf.substr(0, nl))\n          outputBuf = outputBuf.substr(nl + 1)\n        }\n        return buf.length\n      },\n      write (fd, buf, offset, length, position, callback) {\n        if (offset !== 0 || length !== buf.length || position !== null) {\n          callback(enosys())\n          return\n        }\n        const n = this.writeSync(fd, buf)\n        callback(null, n)\n      },\n      chmod (path, mode, callback) { callback(enosys()) },\n      chown (path, uid, gid, callback) { callback(enosys()) },\n      close (fd, callback) { callback(enosys()) },\n      fchmod (fd, mode, callback) { callback(enosys()) },\n      fchown (fd, uid, gid, callback) { callback(enosys()) },\n      fstat (fd, callback) { callback(enosys()) },\n      fsync (fd, callback) { callback(null) },\n      ftruncate (fd, length, callback) { callback(enosys()) },\n      lchown (path, uid, gid, callback) { callback(enosys()) },\n      link (path, link, callback) { callback(enosys()) },\n      lstat (path, callback) { callback(enosys()) },\n      mkdir (path, perm, callback) { callback(enosys()) },\n      open (path, flags, mode, callback) { callback(enosys()) },\n      read (fd, buffer, offset, length, position, callback) { callback(enosys()) },\n      readdir (path, callback) { callback(enosys()) },\n      readlink (path, callback) { callback(enosys()) },\n      rename (from, to, callback) { callback(enosys()) },\n      rmdir (path, callback) { callback(enosys()) },\n      stat (path, callback) { callback(enosys()) },\n      symlink (path, link, callback) { callback(enosys()) },\n      truncate (path, length, callback) { callback(enosys()) },\n      unlink (path, callback) { callback(enosys()) },\n      utimes (path, atime, mtime, callback) { callback(enosys()) }\n    }\n  }\n\n  if (!global.process) {\n    global.process = {\n      getuid () { return -1 },\n      getgid () { return -1 },\n      geteuid () { return -1 },\n      getegid () { return -1 },\n      getgroups () { throw enosys() },\n      pid: -1,\n      ppid: -1,\n      umask () { throw enosys() },\n      cwd () { throw enosys() },\n      chdir () { throw enosys() }\n    }\n  }\n\n  if (!global.crypto) {\n    const nodeCrypto = require('crypto')\n    global.crypto = {\n      getRandomValues (b) {\n        nodeCrypto.randomFillSync(b)\n      }\n    }\n  }\n\n  if (!global.performance) {\n    global.performance = {\n      now () {\n        const [sec, nsec] = process.hrtime()\n        return sec * 1000 + nsec / 1000000\n      }\n    }\n  }\n\n  if (!global.TextEncoder) {\n    global.TextEncoder = require('util').TextEncoder\n  }\n\n  if (!global.TextDecoder) {\n    global.TextDecoder = require('util').TextDecoder\n  }\n\n  // End of polyfills for common API.\n\n  const encoder = new TextEncoder('utf-8')\n  const decoder = new TextDecoder('utf-8')\n\n  global.Go = class {\n    constructor () {\n      this.argv = ['js']\n      this.env = {}\n      this.exit = (code) => {\n        if (code !== 0) {\n          console.warn('exit code:', code)\n        }\n      }\n      this._exitPromise = new Promise((resolve) => {\n        this._resolveExitPromise = resolve\n      })\n      this._pendingEvent = null\n      this._scheduledTimeouts = new Map()\n      this._nextCallbackTimeoutID = 1\n\n      const setInt64 = (addr, v) => {\n        this.mem.setUint32(addr + 0, v, true)\n        this.mem.setUint32(addr + 4, Math.floor(v / 4294967296), true)\n      }\n\n      const getInt64 = (addr) => {\n        const low = this.mem.getUint32(addr + 0, true)\n        const high = this.mem.getInt32(addr + 4, true)\n        return low + high * 4294967296\n      }\n\n      const loadValue = (addr) => {\n        const f = this.mem.getFloat64(addr, true)\n        if (f === 0) {\n          return undefined\n        }\n        if (!isNaN(f)) {\n          return f\n        }\n\n        const id = this.mem.getUint32(addr, true)\n        return this._values[id]\n      }\n\n      const storeValue = (addr, v) => {\n        const nanHead = 0x7FF80000\n\n        if (typeof v === 'number' && v !== 0) {\n          if (isNaN(v)) {\n            this.mem.setUint32(addr + 4, nanHead, true)\n            this.mem.setUint32(addr, 0, true)\n            return\n          }\n          this.mem.setFloat64(addr, v, true)\n          return\n        }\n\n        if (v === undefined) {\n          this.mem.setFloat64(addr, 0, true)\n          return\n        }\n\n        let id = this._ids.get(v)\n        if (id === undefined) {\n          id = this._idPool.pop()\n          if (id === undefined) {\n            id = this._values.length\n          }\n          this._values[id] = v\n          this._goRefCounts[id] = 0\n          this._ids.set(v, id)\n        }\n        this._goRefCounts[id]++\n        let typeFlag = 0\n        switch (typeof v) {\n          case 'object':\n            if (v !== null) {\n              typeFlag = 1\n            }\n            break\n          case 'string':\n            typeFlag = 2\n            break\n          case 'symbol':\n            typeFlag = 3\n            break\n          case 'function':\n            typeFlag = 4\n            break\n        }\n        this.mem.setUint32(addr + 4, nanHead | typeFlag, true)\n        this.mem.setUint32(addr, id, true)\n      }\n\n      const loadSlice = (addr) => {\n        const array = getInt64(addr + 0)\n        const len = getInt64(addr + 8)\n        return new Uint8Array(this._inst.exports.mem.buffer, array, len)\n      }\n\n      const loadSliceOfValues = (addr) => {\n        const array = getInt64(addr + 0)\n        const len = getInt64(addr + 8)\n        const a = new Array(len)\n        for (let i = 0; i < len; i++) {\n          a[i] = loadValue(array + i * 8)\n        }\n        return a\n      }\n\n      const loadString = (addr) => {\n        const saddr = getInt64(addr + 0)\n        const len = getInt64(addr + 8)\n        return decoder.decode(new DataView(this._inst.exports.mem.buffer, saddr, len))\n      }\n\n      const timeOrigin = Date.now() - performance.now()\n      this.importObject = {\n        go: {\n          // Go's SP does not change as long as no Go code is running. Some operations (e.g. calls, getters and setters)\n          // may synchronously trigger a Go event handler. This makes Go code get executed in the middle of the imported\n          // function. A goroutine can switch to a new stack if the current stack is too small (see morestack function).\n          // This changes the SP, thus we have to update the SP used by the imported function.\n\n          // func wasmExit(code int32)\n          'runtime.wasmExit': (sp) => {\n            const code = this.mem.getInt32(sp + 8, true)\n            this.exited = true\n            delete this._inst\n            delete this._values\n            delete this._goRefCounts\n            delete this._ids\n            delete this._idPool\n            this.exit(code)\n          },\n\n          // func wasmWrite(fd uintptr, p unsafe.Pointer, n int32)\n          'runtime.wasmWrite': (sp) => {\n            const fd = getInt64(sp + 8)\n            const p = getInt64(sp + 16)\n            const n = this.mem.getInt32(sp + 24, true)\n            fs.writeSync(fd, new Uint8Array(this._inst.exports.mem.buffer, p, n))\n          },\n\n          // func resetMemoryDataView()\n          'runtime.resetMemoryDataView': (sp) => {\n            this.mem = new DataView(this._inst.exports.mem.buffer)\n          },\n\n          // func nanotime1() int64\n          'runtime.nanotime1': (sp) => {\n            setInt64(sp + 8, (timeOrigin + performance.now()) * 1000000)\n          },\n\n          // func walltime1() (sec int64, nsec int32)\n          'runtime.walltime1': (sp) => {\n            const msec = (new Date()).getTime()\n            setInt64(sp + 8, msec / 1000)\n            this.mem.setInt32(sp + 16, (msec % 1000) * 1000000, true)\n          },\n\n          // func scheduleTimeoutEvent(delay int64) int32\n          'runtime.scheduleTimeoutEvent': (sp) => {\n            const id = this._nextCallbackTimeoutID\n            this._nextCallbackTimeoutID++\n            this._scheduledTimeouts.set(id, setTimeout(\n              () => {\n                this._resume()\n                while (this._scheduledTimeouts.has(id)) {\n                  // for some reason Go failed to register the timeout event, log and try again\n                  // (temporary workaround for https://github.com/golang/go/issues/28975)\n                  console.warn('scheduleTimeoutEvent: missed timeout event')\n                  this._resume()\n                }\n              },\n              getInt64(sp + 8) + 1 // setTimeout has been seen to fire up to 1 millisecond early\n            ))\n            this.mem.setInt32(sp + 16, id, true)\n          },\n\n          // func clearTimeoutEvent(id int32)\n          'runtime.clearTimeoutEvent': (sp) => {\n            const id = this.mem.getInt32(sp + 8, true)\n            clearTimeout(this._scheduledTimeouts.get(id))\n            this._scheduledTimeouts.delete(id)\n          },\n\n          // func getRandomData(r []byte)\n          'runtime.getRandomData': (sp) => {\n            crypto.getRandomValues(loadSlice(sp + 8))\n          },\n\n          // func finalizeRef(v ref)\n          'syscall/js.finalizeRef': (sp) => {\n            const id = this.mem.getUint32(sp + 8, true)\n            this._goRefCounts[id]--\n            if (this._goRefCounts[id] === 0) {\n              const v = this._values[id]\n              this._values[id] = null\n              this._ids.delete(v)\n              this._idPool.push(id)\n            }\n          },\n\n          // func stringVal(value string) ref\n          'syscall/js.stringVal': (sp) => {\n            storeValue(sp + 24, loadString(sp + 8))\n          },\n\n          // func valueGet(v ref, p string) ref\n          'syscall/js.valueGet': (sp) => {\n            const result = Reflect.get(loadValue(sp + 8), loadString(sp + 16))\n            sp = this._inst.exports.getsp() // see comment above\n            storeValue(sp + 32, result)\n          },\n\n          // func valueSet(v ref, p string, x ref)\n          'syscall/js.valueSet': (sp) => {\n            Reflect.set(loadValue(sp + 8), loadString(sp + 16), loadValue(sp + 32))\n          },\n\n          // func valueDelete(v ref, p string)\n          'syscall/js.valueDelete': (sp) => {\n            Reflect.deleteProperty(loadValue(sp + 8), loadString(sp + 16))\n          },\n\n          // func valueIndex(v ref, i int) ref\n          'syscall/js.valueIndex': (sp) => {\n            storeValue(sp + 24, Reflect.get(loadValue(sp + 8), getInt64(sp + 16)))\n          },\n\n          // valueSetIndex(v ref, i int, x ref)\n          'syscall/js.valueSetIndex': (sp) => {\n            Reflect.set(loadValue(sp + 8), getInt64(sp + 16), loadValue(sp + 24))\n          },\n\n          // func valueCall(v ref, m string, args []ref) (ref, bool)\n          'syscall/js.valueCall': (sp) => {\n            try {\n              const v = loadValue(sp + 8)\n              const m = Reflect.get(v, loadString(sp + 16))\n              const args = loadSliceOfValues(sp + 32)\n              const result = Reflect.apply(m, v, args)\n              sp = this._inst.exports.getsp() // see comment above\n              storeValue(sp + 56, result)\n              this.mem.setUint8(sp + 64, 1)\n            } catch (err) {\n              storeValue(sp + 56, err)\n              this.mem.setUint8(sp + 64, 0)\n            }\n          },\n\n          // func valueInvoke(v ref, args []ref) (ref, bool)\n          'syscall/js.valueInvoke': (sp) => {\n            try {\n              const v = loadValue(sp + 8)\n              const args = loadSliceOfValues(sp + 16)\n              const result = Reflect.apply(v, undefined, args)\n              sp = this._inst.exports.getsp() // see comment above\n              storeValue(sp + 40, result)\n              this.mem.setUint8(sp + 48, 1)\n            } catch (err) {\n              storeValue(sp + 40, err)\n              this.mem.setUint8(sp + 48, 0)\n            }\n          },\n\n          // func valueNew(v ref, args []ref) (ref, bool)\n          'syscall/js.valueNew': (sp) => {\n            try {\n              const v = loadValue(sp + 8)\n              const args = loadSliceOfValues(sp + 16)\n              const result = Reflect.construct(v, args)\n              sp = this._inst.exports.getsp() // see comment above\n              storeValue(sp + 40, result)\n              this.mem.setUint8(sp + 48, 1)\n            } catch (err) {\n              storeValue(sp + 40, err)\n              this.mem.setUint8(sp + 48, 0)\n            }\n          },\n\n          // func valueLength(v ref) int\n          'syscall/js.valueLength': (sp) => {\n            setInt64(sp + 16, parseInt(loadValue(sp + 8).length))\n          },\n\n          // valuePrepareString(v ref) (ref, int)\n          'syscall/js.valuePrepareString': (sp) => {\n            const str = encoder.encode(String(loadValue(sp + 8)))\n            storeValue(sp + 16, str)\n            setInt64(sp + 24, str.length)\n          },\n\n          // valueLoadString(v ref, b []byte)\n          'syscall/js.valueLoadString': (sp) => {\n            const str = loadValue(sp + 8)\n            loadSlice(sp + 16).set(str)\n          },\n\n          // func valueInstanceOf(v ref, t ref) bool\n          'syscall/js.valueInstanceOf': (sp) => {\n            this.mem.setUint8(sp + 24, (loadValue(sp + 8) instanceof loadValue(sp + 16)) ? 1 : 0)\n          },\n\n          // func copyBytesToGo(dst []byte, src ref) (int, bool)\n          'syscall/js.copyBytesToGo': (sp) => {\n            const dst = loadSlice(sp + 8)\n            const src = loadValue(sp + 32)\n            if (!(src instanceof Uint8Array || src instanceof Uint8ClampedArray)) {\n              this.mem.setUint8(sp + 48, 0)\n              return\n            }\n            const toCopy = src.subarray(0, dst.length)\n            dst.set(toCopy)\n            setInt64(sp + 40, toCopy.length)\n            this.mem.setUint8(sp + 48, 1)\n          },\n\n          // func copyBytesToJS(dst ref, src []byte) (int, bool)\n          'syscall/js.copyBytesToJS': (sp) => {\n            const dst = loadValue(sp + 8)\n            const src = loadSlice(sp + 16)\n            if (!(dst instanceof Uint8Array || dst instanceof Uint8ClampedArray)) {\n              this.mem.setUint8(sp + 48, 0)\n              return\n            }\n            const toCopy = src.subarray(0, dst.length)\n            dst.set(toCopy)\n            setInt64(sp + 40, toCopy.length)\n            this.mem.setUint8(sp + 48, 1)\n          },\n\n          debug: (value) => {\n            console.log(value)\n          }\n        }\n      }\n    }\n\n    async run (instance) {\n      this._inst = instance\n      this.mem = new DataView(this._inst.exports.mem.buffer)\n      this._values = [ // JS values that Go currently has references to, indexed by reference id\n        NaN,\n        0,\n        null,\n        true,\n        false,\n        global,\n        this\n      ]\n      this._goRefCounts = new Array(this._values.length).fill(Infinity) // number of references that Go has to a JS value, indexed by reference id\n      this._ids = new Map([ // mapping from JS values to reference ids\n        [0, 1],\n        [null, 2],\n        [true, 3],\n        [false, 4],\n        [global, 5],\n        [this, 6]\n      ])\n      this._idPool = [] // unused ids that have been garbage collected\n      this.exited = false // whether the Go program has exited\n\n      // Pass command line arguments and environment variables to WebAssembly by writing them to the linear memory.\n      let offset = 4096\n\n      const strPtr = (str) => {\n        const ptr = offset\n        const bytes = encoder.encode(str + '\\0')\n        new Uint8Array(this.mem.buffer, offset, bytes.length).set(bytes)\n        offset += bytes.length\n        if (offset % 8 !== 0) {\n          offset += 8 - (offset % 8)\n        }\n        return ptr\n      }\n\n      const argc = this.argv.length\n\n      const argvPtrs = []\n      this.argv.forEach((arg) => {\n        argvPtrs.push(strPtr(arg))\n      })\n      argvPtrs.push(0)\n\n      const keys = Object.keys(this.env).sort()\n      keys.forEach((key) => {\n        argvPtrs.push(strPtr(`${key}=${this.env[key]}`))\n      })\n      argvPtrs.push(0)\n\n      const argv = offset\n      argvPtrs.forEach((ptr) => {\n        this.mem.setUint32(offset, ptr, true)\n        this.mem.setUint32(offset + 4, 0, true)\n        offset += 8\n      })\n\n      this._inst.exports.run(argc, argv)\n      if (this.exited) {\n        this._resolveExitPromise()\n      }\n      await this._exitPromise\n    }\n\n    _resume () {\n      if (this.exited) {\n        throw new Error('Go program has already exited')\n      }\n      this._inst.exports.resume()\n      if (this.exited) {\n        this._resolveExitPromise()\n      }\n    }\n\n    _makeFuncWrapper (id) {\n      const go = this\n      return function () {\n        const event = { id: id, this: this, args: arguments }\n        go._pendingEvent = event\n        go._resume()\n        return event.result\n      }\n    }\n  }\n\n  if (\n    global.require &&\n\t\tglobal.require.main === module &&\n\t\tglobal.process &&\n\t\tglobal.process.versions &&\n\t\t!global.process.versions.electron\n  ) {\n    if (process.argv.length < 3) {\n      console.error('usage: go_js_wasm_exec [wasm binary] [arguments]')\n      process.exit(1)\n    }\n\n    const go = new Go()\n    go.argv = process.argv.slice(2)\n    go.env = Object.assign({ TMPDIR: require('os').tmpdir() }, process.env)\n    go.exit = process.exit\n    WebAssembly.instantiate(fs.readFileSync(process.argv[2]), go.importObject).then((result) => {\n      process.on('exit', (code) => { // Node.js exits if no event handler is pending\n        if (code === 0 && !go.exited) {\n          // deadlock, make Go print error and stack traces\n          go._pendingEvent = { id: 0 }\n          go._resume()\n        }\n      })\n      return go.run(result.instance)\n    }).catch((err) => {\n      console.error(err)\n      process.exit(1)\n    })\n  }\n})()\n"],"names":["global","window","self","Error","enosys","err","code","fs","outputBuf","constants","O_WRONLY","O_RDWR","O_CREAT","O_TRUNC","O_APPEND","O_EXCL","writeSync","fd","buf","nl","decoder","decode","lastIndexOf","console","log","substr","length","write","offset","position","callback","this","chmod","path","mode","chown","uid","gid","close","fchmod","fchown","fstat","fsync","ftruncate","lchown","link","lstat","mkdir","perm","open","flags","read","buffer","readdir","readlink","rename","from","to","rmdir","stat","symlink","truncate","unlink","utimes","atime","mtime","process","getuid","getgid","geteuid","getegid","getgroups","pid","ppid","umask","cwd","chdir","crypto","nodeCrypto","require","getRandomValues","b","randomFillSync","performance","now","hrtime","TextEncoder","TextDecoder","encoder","Go","argv","env","exit","warn","_exitPromise","Promise","resolve","_this","_resolveExitPromise","_pendingEvent","_scheduledTimeouts","Map","_nextCallbackTimeoutID","setInt64","addr","v","mem","setUint32","Math","floor","getInt64","getUint32","getInt32","loadValue","f","getFloat64","isNaN","id","_values","storeValue","setFloat64","undefined","_ids","get","_idPool","pop","_goRefCounts","set","typeFlag","loadSlice","array","len","Uint8Array","_inst","exports","loadSliceOfValues","a","Array","i","loadString","saddr","DataView","timeOrigin","Date","importObject","go","runtime.wasmExit","sp","exited","runtime.wasmWrite","p","n","runtime.resetMemoryDataView","runtime.nanotime1","runtime.walltime1","msec","getTime","setInt32","runtime.scheduleTimeoutEvent","setTimeout","_resume","has","runtime.clearTimeoutEvent","clearTimeout","runtime.getRandomData","syscall/js.finalizeRef","push","syscall/js.stringVal","syscall/js.valueGet","result","Reflect","getsp","syscall/js.valueSet","syscall/js.valueDelete","deleteProperty","syscall/js.valueIndex","syscall/js.valueSetIndex","syscall/js.valueCall","m","args","apply","setUint8","syscall/js.valueInvoke","syscall/js.valueNew","construct","syscall/js.valueLength","parseInt","syscall/js.valuePrepareString","str","encode","String","syscall/js.valueLoadString","syscall/js.valueInstanceOf","syscall/js.copyBytesToGo","dst","src","Uint8ClampedArray","toCopy","subarray","syscall/js.copyBytesToJS","debug","value","run","instance","_this3","NaN","fill","Infinity","strPtr","ptr","bytes","argc","argvPtrs","forEach","arg","Object","keys","sort","key","resume","_makeFuncWrapper","event","arguments","main","module","versions","electron","error","slice","assign","TMPDIR","tmpdir","WebAssembly","instantiate","readFileSync","then","on"],"mappings":"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"}