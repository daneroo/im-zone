{"version":3,"file":"wasm_exec_tinygo_fixed-d806dd4a.js","sources":["../lib/wasm-go/wasm_exec_tinygo_fixed.js"],"sourcesContent":["// Copyright 2018 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n//\n// This file has been modified for use by the TinyGo compiler.\n\n(() => {\n  // Map multiple JavaScript environments to a single common API,\n  // preferring web standards over Node.js API.\n  //\n  // Environments considered:\n  // - Browsers\n  // - Node.js\n  // - Electron\n  // - Parcel\n\n  if (typeof global !== 'undefined') {\n    // global already exists\n  } else if (typeof window !== 'undefined') {\n    window.global = window\n  } else if (typeof self !== 'undefined') {\n    self.global = self\n  } else {\n    throw new Error('cannot export Go (neither global, window nor self is defined)')\n  }\n\n  // This is the culprit!\n  // if (!global.require && typeof require !== 'undefined') {\n  //   global.require = require\n  // }\n\n  // if (!global.fs && global.require) {\n  //   global.fs = require('fs')\n  // }\n\n  const enosys = () => {\n    const err = new Error('not implemented')\n    err.code = 'ENOSYS'\n    return err\n  }\n\n  if (!global.fs) {\n    let outputBuf = ''\n    global.fs = {\n      constants: { O_WRONLY: -1, O_RDWR: -1, O_CREAT: -1, O_TRUNC: -1, O_APPEND: -1, O_EXCL: -1 }, // unused\n      writeSync (fd, buf) {\n        outputBuf += decoder.decode(buf)\n        const nl = outputBuf.lastIndexOf('\\n')\n        if (nl != -1) {\n          console.log(outputBuf.substr(0, nl))\n          outputBuf = outputBuf.substr(nl + 1)\n        }\n        return buf.length\n      },\n      write (fd, buf, offset, length, position, callback) {\n        if (offset !== 0 || length !== buf.length || position !== null) {\n          callback(enosys())\n          return\n        }\n        const n = this.writeSync(fd, buf)\n        callback(null, n)\n      },\n      chmod (path, mode, callback) { callback(enosys()) },\n      chown (path, uid, gid, callback) { callback(enosys()) },\n      close (fd, callback) { callback(enosys()) },\n      fchmod (fd, mode, callback) { callback(enosys()) },\n      fchown (fd, uid, gid, callback) { callback(enosys()) },\n      fstat (fd, callback) { callback(enosys()) },\n      fsync (fd, callback) { callback(null) },\n      ftruncate (fd, length, callback) { callback(enosys()) },\n      lchown (path, uid, gid, callback) { callback(enosys()) },\n      link (path, link, callback) { callback(enosys()) },\n      lstat (path, callback) { callback(enosys()) },\n      mkdir (path, perm, callback) { callback(enosys()) },\n      open (path, flags, mode, callback) { callback(enosys()) },\n      read (fd, buffer, offset, length, position, callback) { callback(enosys()) },\n      readdir (path, callback) { callback(enosys()) },\n      readlink (path, callback) { callback(enosys()) },\n      rename (from, to, callback) { callback(enosys()) },\n      rmdir (path, callback) { callback(enosys()) },\n      stat (path, callback) { callback(enosys()) },\n      symlink (path, link, callback) { callback(enosys()) },\n      truncate (path, length, callback) { callback(enosys()) },\n      unlink (path, callback) { callback(enosys()) },\n      utimes (path, atime, mtime, callback) { callback(enosys()) }\n    }\n  }\n\n  if (!global.process) {\n    global.process = {\n      getuid () { return -1 },\n      getgid () { return -1 },\n      geteuid () { return -1 },\n      getegid () { return -1 },\n      getgroups () { throw enosys() },\n      pid: -1,\n      ppid: -1,\n      umask () { throw enosys() },\n      cwd () { throw enosys() },\n      chdir () { throw enosys() }\n    }\n  }\n\n  if (!global.crypto) {\n    const nodeCrypto = require('crypto')\n    global.crypto = {\n      getRandomValues (b) {\n        nodeCrypto.randomFillSync(b)\n      }\n    }\n  }\n\n  if (!global.performance) {\n    global.performance = {\n      now () {\n        const [sec, nsec] = process.hrtime()\n        return sec * 1000 + nsec / 1000000\n      }\n    }\n  }\n\n  if (!global.TextEncoder) {\n    global.TextEncoder = require('util').TextEncoder\n  }\n\n  if (!global.TextDecoder) {\n    global.TextDecoder = require('util').TextDecoder\n  }\n\n  // End of polyfills for common API.\n\n  const encoder = new TextEncoder('utf-8')\n  const decoder = new TextDecoder('utf-8')\n  var logLine = []\n\n  global.Go = class {\n    constructor () {\n      this._callbackTimeouts = new Map()\n      this._nextCallbackTimeoutID = 1\n\n      const mem = () => {\n        // The buffer may change when requesting more memory.\n        return new DataView(this._inst.exports.memory.buffer)\n      }\n\n      const setInt64 = (addr, v) => {\n        mem().setUint32(addr + 0, v, true)\n        mem().setUint32(addr + 4, Math.floor(v / 4294967296), true)\n      }\n\n      const getInt64 = (addr) => {\n        const low = mem().getUint32(addr + 0, true)\n        const high = mem().getInt32(addr + 4, true)\n        return low + high * 4294967296\n      }\n\n      const loadValue = (addr) => {\n        const f = mem().getFloat64(addr, true)\n        if (f === 0) {\n          return undefined\n        }\n        if (!isNaN(f)) {\n          return f\n        }\n\n        const id = mem().getUint32(addr, true)\n        return this._values[id]\n      }\n\n      const storeValue = (addr, v) => {\n        const nanHead = 0x7FF80000\n\n        if (typeof v === 'number') {\n          if (isNaN(v)) {\n            mem().setUint32(addr + 4, nanHead, true)\n            mem().setUint32(addr, 0, true)\n            return\n          }\n          if (v === 0) {\n            mem().setUint32(addr + 4, nanHead, true)\n            mem().setUint32(addr, 1, true)\n            return\n          }\n          mem().setFloat64(addr, v, true)\n          return\n        }\n\n        switch (v) {\n          case undefined:\n            mem().setFloat64(addr, 0, true)\n            return\n          case null:\n            mem().setUint32(addr + 4, nanHead, true)\n            mem().setUint32(addr, 2, true)\n            return\n          case true:\n            mem().setUint32(addr + 4, nanHead, true)\n            mem().setUint32(addr, 3, true)\n            return\n          case false:\n            mem().setUint32(addr + 4, nanHead, true)\n            mem().setUint32(addr, 4, true)\n            return\n        }\n\n        let id = this._ids.get(v)\n        if (id === undefined) {\n          id = this._idPool.pop()\n          if (id === undefined) {\n            id = this._values.length\n          }\n          this._values[id] = v\n          this._goRefCounts[id] = 0\n          this._ids.set(v, id)\n        }\n        this._goRefCounts[id]++\n        let typeFlag = 1\n        switch (typeof v) {\n          case 'string':\n            typeFlag = 2\n            break\n          case 'symbol':\n            typeFlag = 3\n            break\n          case 'function':\n            typeFlag = 4\n            break\n        }\n        mem().setUint32(addr + 4, nanHead | typeFlag, true)\n        mem().setUint32(addr, id, true)\n      }\n\n      const loadSlice = (array, len, cap) => {\n        return new Uint8Array(this._inst.exports.memory.buffer, array, len)\n      }\n\n      const loadSliceOfValues = (array, len, cap) => {\n        const a = new Array(len)\n        for (let i = 0; i < len; i++) {\n          a[i] = loadValue(array + i * 8)\n        }\n        return a\n      }\n\n      const loadString = (ptr, len) => {\n        return decoder.decode(new DataView(this._inst.exports.memory.buffer, ptr, len))\n      }\n\n      const timeOrigin = Date.now() - performance.now()\n      this.importObject = {\n        wasi_unstable: {\n          // https://github.com/bytecodealliance/wasmtime/blob/master/docs/WASI-api.md#__wasi_fd_write\n          fd_write: function (fd, iovs_ptr, iovs_len, nwritten_ptr) {\n            const nwritten = 0\n            if (fd == 1) {\n              for (let iovs_i = 0; iovs_i < iovs_len; iovs_i++) {\n                const iov_ptr = iovs_ptr + iovs_i * 8 // assuming wasm32\n                const ptr = mem().getUint32(iov_ptr + 0, true)\n                const len = mem().getUint32(iov_ptr + 4, true)\n                for (let i = 0; i < len; i++) {\n                  const c = mem().getUint8(ptr + i)\n                  if (c == 13) { // CR\n                    // ignore\n                  } else if (c == 10) { // LF\n                    // write line\n                    const line = decoder.decode(new Uint8Array(logLine))\n                    logLine = []\n                    console.log(line)\n                  } else {\n                    logLine.push(c)\n                  }\n                }\n              }\n            } else {\n              console.error('invalid file descriptor:', fd)\n            }\n            mem().setUint32(nwritten_ptr, nwritten, true)\n            return 0\n          }\n        },\n        env: {\n          // func ticks() float64\n          'runtime.ticks': () => {\n            return timeOrigin + performance.now()\n          },\n\n          // func sleepTicks(timeout float64)\n          'runtime.sleepTicks': (timeout) => {\n            // Do not sleep, only reactivate scheduler after the given timeout.\n            setTimeout(this._inst.exports.go_scheduler, timeout)\n          },\n\n          // func finalizeRef(v ref)\n          'syscall/js.finalizeRef': (sp) => {\n            // Note: TinyGo does not support finalizers so this should never be\n            // called.\n            console.error('syscall/js.finalizeRef not implemented')\n          },\n\n          // func stringVal(value string) ref\n          'syscall/js.stringVal': (ret_ptr, value_ptr, value_len) => {\n            const s = loadString(value_ptr, value_len)\n            storeValue(ret_ptr, s)\n          },\n\n          // func valueGet(v ref, p string) ref\n          'syscall/js.valueGet': (retval, v_addr, p_ptr, p_len) => {\n            const prop = loadString(p_ptr, p_len)\n            const value = loadValue(v_addr)\n            const result = Reflect.get(value, prop)\n            storeValue(retval, result)\n          },\n\n          // func valueSet(v ref, p string, x ref)\n          'syscall/js.valueSet': (v_addr, p_ptr, p_len, x_addr) => {\n            const v = loadValue(v_addr)\n            const p = loadString(p_ptr, p_len)\n            const x = loadValue(x_addr)\n            Reflect.set(v, p, x)\n          },\n\n          // func valueDelete(v ref, p string)\n          'syscall/js.valueDelete': (v_addr, p_ptr, p_len) => {\n            const v = loadValue(v_addr)\n            const p = loadString(p_ptr, p_len)\n            Reflect.deleteProperty(v, p)\n          },\n\n          // func valueIndex(v ref, i int) ref\n          'syscall/js.valueIndex': (ret_addr, v_addr, i) => {\n            storeValue(ret_addr, Reflect.get(loadValue(v_addr), i))\n          },\n\n          // valueSetIndex(v ref, i int, x ref)\n          'syscall/js.valueSetIndex': (v_addr, i, x_addr) => {\n            Reflect.set(loadValue(v_addr), i, loadValue(x_addr))\n          },\n\n          // func valueCall(v ref, m string, args []ref) (ref, bool)\n          'syscall/js.valueCall': (ret_addr, v_addr, m_ptr, m_len, args_ptr, args_len, args_cap) => {\n            const v = loadValue(v_addr)\n            const name = loadString(m_ptr, m_len)\n            const args = loadSliceOfValues(args_ptr, args_len, args_cap)\n            try {\n              const m = Reflect.get(v, name)\n              storeValue(ret_addr, Reflect.apply(m, v, args))\n              mem().setUint8(ret_addr + 8, 1)\n            } catch (err) {\n              storeValue(ret_addr, err)\n              mem().setUint8(ret_addr + 8, 0)\n            }\n          },\n\n          // func valueInvoke(v ref, args []ref) (ref, bool)\n          'syscall/js.valueInvoke': (ret_addr, v_addr, args_ptr, args_len, args_cap) => {\n            try {\n              const v = loadValue(v_addr)\n              const args = loadSliceOfValues(args_ptr, args_len, args_cap)\n              storeValue(ret_addr, Reflect.apply(v, undefined, args))\n              mem().setUint8(ret_addr + 8, 1)\n            } catch (err) {\n              storeValue(ret_addr, err)\n              mem().setUint8(ret_addr + 8, 0)\n            }\n          },\n\n          // func valueNew(v ref, args []ref) (ref, bool)\n          'syscall/js.valueNew': (ret_addr, v_addr, args_ptr, args_len, args_cap) => {\n            const v = loadValue(v_addr)\n            const args = loadSliceOfValues(args_ptr, args_len, args_cap)\n            try {\n              storeValue(ret_addr, Reflect.construct(v, args))\n              mem().setUint8(ret_addr + 8, 1)\n            } catch (err) {\n              storeValue(ret_addr, err)\n              mem().setUint8(ret_addr + 8, 0)\n            }\n          },\n\n          // func valueLength(v ref) int\n          'syscall/js.valueLength': (v_addr) => {\n            return loadValue(v_addr).length\n          },\n\n          // valuePrepareString(v ref) (ref, int)\n          'syscall/js.valuePrepareString': (ret_addr, v_addr) => {\n            const s = String(loadValue(v_addr))\n            const str = encoder.encode(s)\n            storeValue(ret_addr, str)\n            setInt64(ret_addr + 8, str.length)\n          },\n\n          // valueLoadString(v ref, b []byte)\n          'syscall/js.valueLoadString': (v_addr, slice_ptr, slice_len, slice_cap) => {\n            const str = loadValue(v_addr)\n            loadSlice(slice_ptr, slice_len, slice_cap).set(str)\n          },\n\n          // func valueInstanceOf(v ref, t ref) bool\n          // \"syscall/js.valueInstanceOf\": (sp) => {\n          //\tmem().setUint8(sp + 24, loadValue(sp + 8) instanceof loadValue(sp + 16));\n          // },\n\n          // func copyBytesToGo(dst []byte, src ref) (int, bool)\n          'syscall/js.copyBytesToGo': (ret_addr, dest_addr, dest_len, dest_cap, source_addr) => {\n            const num_bytes_copied_addr = ret_addr\n            const returned_status_addr = ret_addr + 4 // Address of returned boolean status variable\n\n            const dst = loadSlice(dest_addr, dest_len)\n            const src = loadValue(source_addr)\n            if (!(src instanceof Uint8Array || src instanceof Uint8ClampedArray)) {\n              mem().setUint8(returned_status_addr, 0) // Return \"not ok\" status\n              return\n            }\n            const toCopy = src.subarray(0, dst.length)\n            dst.set(toCopy)\n            setInt64(num_bytes_copied_addr, toCopy.length)\n            mem().setUint8(returned_status_addr, 1) // Return \"ok\" status\n          },\n\n          // copyBytesToJS(dst ref, src []byte) (int, bool)\n          // Originally copied from upstream Go project, then modified:\n          //   https://github.com/golang/go/blob/3f995c3f3b43033013013e6c7ccc93a9b1411ca9/misc/wasm/wasm_exec.js#L404-L416\n          'syscall/js.copyBytesToJS': (ret_addr, dest_addr, source_addr, source_len, source_cap) => {\n            const num_bytes_copied_addr = ret_addr\n            const returned_status_addr = ret_addr + 4 // Address of returned boolean status variable\n\n            const dst = loadValue(dest_addr)\n            const src = loadSlice(source_addr, source_len)\n            if (!(src instanceof Uint8Array || src instanceof Uint8ClampedArray)) {\n              mem().setUint8(returned_status_addr, 0) // Return \"not ok\" status\n              return\n            }\n            const toCopy = src.subarray(0, dst.length)\n            dst.set(toCopy)\n            setInt64(num_bytes_copied_addr, toCopy.length)\n            mem().setUint8(returned_status_addr, 1) // Return \"ok\" status\n          }\n        }\n      }\n    }\n\n    async run (instance) {\n      this._inst = instance\n      this._values = [ // JS values that Go currently has references to, indexed by reference id\n        NaN,\n        0,\n        null,\n        true,\n        false,\n        global,\n        this\n      ]\n      this._goRefCounts = [] // number of references that Go has to a JS value, indexed by reference id\n      this._ids = new Map() // mapping from JS values to reference ids\n      this._idPool = [] // unused ids that have been garbage collected\n      this.exited = false // whether the Go program has exited\n\n      const mem = new DataView(this._inst.exports.memory.buffer)\n\n      while (true) {\n        const callbackPromise = new Promise((resolve) => {\n          this._resolveCallbackPromise = () => {\n            if (this.exited) {\n              throw new Error('bad callback: Go program has already exited')\n            }\n            setTimeout(resolve, 0) // make sure it is asynchronous\n          }\n        })\n        this._inst.exports._start()\n        if (this.exited) {\n          break\n        }\n        await callbackPromise\n      }\n    }\n\n    _resume () {\n      if (this.exited) {\n        throw new Error('Go program has already exited')\n      }\n      this._inst.exports.resume()\n      if (this.exited) {\n        this._resolveExitPromise()\n      }\n    }\n\n    _makeFuncWrapper (id) {\n      const go = this\n      return function () {\n        const event = { id: id, this: this, args: arguments }\n        go._pendingEvent = event\n        go._resume()\n        return event.result\n      }\n    }\n  }\n\n  if (\n    global.require &&\n\t\tglobal.require.main === module &&\n\t\tglobal.process &&\n\t\tglobal.process.versions &&\n\t\t!global.process.versions.electron\n  ) {\n    if (process.argv.length != 3) {\n      console.error('usage: go_js_wasm_exec [wasm binary] [arguments]')\n      process.exit(1)\n    }\n\n    const go = new Go()\n    WebAssembly.instantiate(fs.readFileSync(process.argv[2]), go.importObject).then((result) => {\n      return go.run(result.instance)\n    }).catch((err) => {\n      console.error(err)\n      process.exit(1)\n    })\n  }\n})()\n"],"names":["pact","state","value","s","o","_settle","bind","v","then","observer","_Pact","prototype","onFulfilled","onRejected","result","this","callback","e","_this","thenable","global","window","self","Error","enosys","err","code","fs","outputBuf","constants","O_WRONLY","O_RDWR","O_CREAT","O_TRUNC","O_APPEND","O_EXCL","writeSync","fd","buf","nl","decoder","decode","lastIndexOf","console","log","substr","length","write","offset","position","chmod","path","mode","chown","uid","gid","close","fchmod","fchown","fstat","fsync","ftruncate","lchown","link","lstat","mkdir","perm","open","flags","read","buffer","readdir","readlink","rename","from","to","rmdir","stat","symlink","truncate","unlink","utimes","atime","mtime","process","getuid","getgid","geteuid","getegid","getgroups","pid","ppid","umask","cwd","chdir","crypto","nodeCrypto","require","getRandomValues","b","randomFillSync","performance","now","hrtime","TextEncoder","TextDecoder","encoder","logLine","Go","_callbackTimeouts","Map","_nextCallbackTimeoutID","mem","DataView","_inst","exports","memory","setInt64","addr","setUint32","Math","floor","loadValue","f","getFloat64","isNaN","id","getUint32","_values","storeValue","setFloat64","undefined","_ids","get","_idPool","pop","_goRefCounts","set","typeFlag","loadSlice","array","len","cap","Uint8Array","loadSliceOfValues","a","Array","i","loadString","ptr","timeOrigin","Date","importObject","wasi_unstable","fd_write","iovs_ptr","iovs_len","nwritten_ptr","iovs_i","iov_ptr","c","getUint8","line","push","error","env","runtime.ticks","runtime.sleepTicks","timeout","setTimeout","go_scheduler","syscall/js.finalizeRef","sp","syscall/js.stringVal","ret_ptr","value_ptr","value_len","syscall/js.valueGet","retval","v_addr","p_ptr","p_len","prop","Reflect","syscall/js.valueSet","x_addr","p","x","syscall/js.valueDelete","deleteProperty","syscall/js.valueIndex","ret_addr","syscall/js.valueSetIndex","syscall/js.valueCall","m_ptr","m_len","args_ptr","args_len","args_cap","name","args","m","apply","setUint8","syscall/js.valueInvoke","syscall/js.valueNew","construct","syscall/js.valueLength","syscall/js.valuePrepareString","String","str","encode","syscall/js.valueLoadString","slice_ptr","slice_len","slice_cap","syscall/js.copyBytesToGo","dest_addr","dest_len","dest_cap","source_addr","num_bytes_copied_addr","returned_status_addr","dst","src","Uint8ClampedArray","toCopy","subarray","syscall/js.copyBytesToJS","source_len","source_cap","run","instance","_this3","NaN","exited","test","update","body","stage","shouldContinue","_isSettledPact","reject","_resumeAfterTest","_resumeAfterBody","updateValue","callbackPromise","Promise","resolve","_resolveCallbackPromise","_start","_resume","resume","_resolveExitPromise","_makeFuncWrapper","go","event","arguments","_pendingEvent","main","module","versions","electron","argv","exit","WebAssembly","instantiate","readFileSync"],"mappings":"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"}